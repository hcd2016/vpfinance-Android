package cn.vpfinance.vpjr.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import cn.vpfinance.vpjr.gson.FinanceProduct;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig financeProductDaoConfig;
    private final DaoConfig loanRecordDaoConfig;
    private final DaoConfig borrowerInfoDaoConfig;
    private final DaoConfig bannerDaoConfig;
    private final DaoConfig investRecordDaoConfig;
    private final DaoConfig myInvestRecordDaoConfig;
    private final DaoConfig queryPageDaoConfig;
    private final DaoConfig bankCardDaoConfig;

    private final UserDao userDao;
    private final FinanceProductDao financeProductDao;
    private final LoanRecordDao loanRecordDao;
    private final BorrowerInfoDao borrowerInfoDao;
    private final BannerDao bannerDao;
    private final InvestRecordDao investRecordDao;
    private final MyInvestRecordDao myInvestRecordDao;
    private final QueryPageDao queryPageDao;
    private final BankCardDao bankCardDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        financeProductDaoConfig = daoConfigMap.get(FinanceProductDao.class).clone();
        financeProductDaoConfig.initIdentityScope(type);

        loanRecordDaoConfig = daoConfigMap.get(LoanRecordDao.class).clone();
        loanRecordDaoConfig.initIdentityScope(type);

        borrowerInfoDaoConfig = daoConfigMap.get(BorrowerInfoDao.class).clone();
        borrowerInfoDaoConfig.initIdentityScope(type);

        bannerDaoConfig = daoConfigMap.get(BannerDao.class).clone();
        bannerDaoConfig.initIdentityScope(type);

        investRecordDaoConfig = daoConfigMap.get(InvestRecordDao.class).clone();
        investRecordDaoConfig.initIdentityScope(type);

        myInvestRecordDaoConfig = daoConfigMap.get(MyInvestRecordDao.class).clone();
        myInvestRecordDaoConfig.initIdentityScope(type);

        queryPageDaoConfig = daoConfigMap.get(QueryPageDao.class).clone();
        queryPageDaoConfig.initIdentityScope(type);

        bankCardDaoConfig = daoConfigMap.get(BankCardDao.class).clone();
        bankCardDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        financeProductDao = new FinanceProductDao(financeProductDaoConfig, this);
        loanRecordDao = new LoanRecordDao(loanRecordDaoConfig, this);
        borrowerInfoDao = new BorrowerInfoDao(borrowerInfoDaoConfig, this);
        bannerDao = new BannerDao(bannerDaoConfig, this);
        investRecordDao = new InvestRecordDao(investRecordDaoConfig, this);
        myInvestRecordDao = new MyInvestRecordDao(myInvestRecordDaoConfig, this);
        queryPageDao = new QueryPageDao(queryPageDaoConfig, this);
        bankCardDao = new BankCardDao(bankCardDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(FinanceProduct.class, financeProductDao);
        registerDao(LoanRecord.class, loanRecordDao);
        registerDao(BorrowerInfo.class, borrowerInfoDao);
        registerDao(Banner.class, bannerDao);
        registerDao(InvestRecord.class, investRecordDao);
        registerDao(MyInvestRecord.class, myInvestRecordDao);
        registerDao(QueryPage.class, queryPageDao);
        registerDao(BankCard.class, bankCardDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        financeProductDaoConfig.getIdentityScope().clear();
        loanRecordDaoConfig.getIdentityScope().clear();
        borrowerInfoDaoConfig.getIdentityScope().clear();
        bannerDaoConfig.getIdentityScope().clear();
        investRecordDaoConfig.getIdentityScope().clear();
        myInvestRecordDaoConfig.getIdentityScope().clear();
        queryPageDaoConfig.getIdentityScope().clear();
        bankCardDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public FinanceProductDao getFinanceProductDao() {
        return financeProductDao;
    }

    public LoanRecordDao getLoanRecordDao() {
        return loanRecordDao;
    }

    public BorrowerInfoDao getBorrowerInfoDao() {
        return borrowerInfoDao;
    }

    public BannerDao getBannerDao() {
        return bannerDao;
    }

    public InvestRecordDao getInvestRecordDao() {
        return investRecordDao;
    }

    public MyInvestRecordDao getMyInvestRecordDao() {
        return myInvestRecordDao;
    }

    public QueryPageDao getQueryPageDao() {
        return queryPageDao;
    }

    public BankCardDao getBankCardDao() {
        return bankCardDao;
    }

}
